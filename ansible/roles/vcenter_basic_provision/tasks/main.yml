---
- name: Provision instances asynchronously
  vmware_guest:
    hostname: "{{ hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    validate_certs: "{{ validate_certs }}"
    name: "{{ item }}"
    template: "{{ template }}"
    datacenter: "{{ datacenter }}"
    cluster: "{{ cluster }}"
    folder: "{{ folder }}"
    snapshot_src: "{{ snapshot_src | default(omit, true) }}"
    linked_clone: "{{ linked_clone | default(omit, true) }}"
    notes: "{{ notes | default(omit, true) }}"
    hardware:
      memory_mb: "{{ memory_mb }}"
      num_cpus: "{{ num_cpus }}"
    wait_for_ip_address: "{{ wait_for_ip_address }}"
    networks: "{{ vm_networks }}"
    disk: "{{ disks | default(omit, true) }}"
    state: "{{ state }}"
  delegate_to: localhost
  with_items: "{{ vm_names }}"
  register: vcenter_created_vms_async
  async: "{{ async_wait }}"
  poll: "{{ async_poll }}"

- name: Wait for asynchronous job to complete
  async_status: jid={{ item.ansible_job_id }}
  register: vmware_created_vms
  until: vmware_created_vms.finished
  retries: "{{ async_retries }}"
  with_items: "{{ vcenter_created_vms_async.results }}"

- name: Log item.instance.ipv4
  debug:
    var: item.instance.ipv4
  with_items: "{{ vcenter_created_vms.results }}"
  when: wait_for_ip_address and verbose

- name: "Add new vm ip addresses to vmware_hosts group"
  add_host:
    name: "{{ item.instance.ipv4 }}"
    groups: vcenter_hosts
  with_items: "{{ vcenter_created_vms.results }}"
  when: wait_for_ip_address
